version: "3.8"

x-placement_apollon: &placement_apollon
  placement:
    constraints:
      - node.hostname == Apollon

x-placement_athena: &placement_athena
  placement:
    constraints:
      - node.hostname == Athena

x-placement_hermes: &placement_hermes
  placement:
    constraints:
      - node.hostname == Hermes

services:
  # debug:
  #   image: praqma/network-multitool
  #   deploy:
  #     mode: global
  #   networks:
  #     - traefik_net

  # portainer_agent:
  #   image: portainer/agent:2.16.2
  #   environment:
  #     AGENT_CLUSTER_ADDR: tasks.agent
  #     # LOG_LEVEL: debug
  #     CAP_HOST_MANAGEMENT: 1
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /var/lib/docker/volumes:/var/lib/docker/volumes
  #   networks:
  #     - agent-net
  #   deploy:
  #     mode: global
  #     placement:
  #       constraints: [node.platform.os == linux]

  # portainer:
  #   image: portainer/portainer-ce:2.16.2
  #   command: -H tcp://tasks.agent:9001 --tlsskipverify
  #   volumes:
  #     - portainer_data:/data
  #   environment:
  #     - NVIDIA_VISIBLE_DEVICES=all
  #   networks:
  #     - agent-net
  #     - traefik_net
  #   deploy:
  #     placement:
  #       constraints:
  #         - node.role == manager
  #     mode: replicated
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure
  #     labels:
  #       - traefik.enable=true
  #       - traefik.http.routers.apollon_portainer.rule=Host(`portainer.${HOME}}`)
  #       - traefik.http.routers.apollon_portainer.entrypoints=http
  #       - traefik.http.services.apollon_portainer.loadbalancer.server.port=9000

  # apollon_gotify:
  #   image: gotify/server-arm7
  #   volumes:
  #     - gotify_data:/app/data
  #     - gotify_config:/etc/gotify
  #   environment:
  #     - GOTIFY_DATABASE_CONNECTION=file:data/gotify.db?_journal=WAL
  #   networks:
  #     - traefik_net
  #   deploy:
  #     <<: *placement_apollon
  #     labels:
  #       - traefik.enable=true
  #       - traefik.http.routers.apollon_gotify.rule=Host(`gotify.${HOME}`)
  #       - traefik.http.routers.apollon_gotify.entrypoints=http
  #       - traefik.http.services.apollon_gotify.loadbalancer.server.port=80

  athena_nextcloud_db:
    image: mariadb:10.5
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - nextcloud_db:/var/lib/mysql
    networks:
      - nextcloud_net
    deploy:
      <<: *placement_athena
    environment:
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_DB_ROOT_PASSWD} # Requested, set the root's password of MySQL service.
      - MYSQL_PASSWORD=${NEXTCLOUD_DB_PASSWD}
      - MYSQL_DATABASE=${NEXTCLOUD_DB_NAME}
      - MYSQL_USER=${NEXTCLOUD_DB_USER}
      - MYSQL_LOG_CONSOLE=true

  athena_nextcloud:
    image: nextcloud:latest
    volumes:
      - /hdd-1/nextcloud/data:/data
      - nextcloud_config:/var/www/html/config
    networks:
      - nextcloud_net
    ports:
      - 9801:80
    sysctls:
      - net.ipv4.ip_unprivileged_port_start=0
    user: 1000:1000
    deploy:
      <<: *placement_athena
    environment:
      - MYSQL_PASSWORD=${NEXTCLOUD_DB_PASSWD}
      - MYSQL_DATABASE=${NEXTCLOUD_DB_NAME}
      - MYSQL_USER=${NEXTCLOUD_DB_USER}
      - MYSQL_HOST=athena_nextcloud_db:3306
      - NEXTCLOUD_DATA_DIR=/data
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_URL}
      - TRUSTED_PROXIES=51.77.195.239
      - OVERWRITEPROTOCOL=https
      - OVERWRITEHOST=${NEXTCLOUD_URL}
      - OVERWRITEWEBROOT=/
      - OVERWRITECONDADDR=^
      - OVERWRITECLIURL=https://${NEXTCLOUD_URL}

  athena_file_server:
    image: halverneus/static-file-server
    volumes:
      - /big-hdd/shared-files:/web
    ports:
      - 9803:8080
    deploy:
      <<: *placement_athena

  athena_plex:
    image: linuxserver/plex:latest
    # runtime: nvidia
    ports:
      - 9802:32400
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - ADVERTISE_IP="https://${PLEX_URL}:443"
      - NVIDIA_VISIBLE_DEVICES=all
      # - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - /ssd-1/plex/config:/config
      - /big-hdd/plex:/data
    deploy:
      <<: *placement_athena
      resources:
        reservations:
          generic_resources:
            - discrete_resource_spec:
                kind: "NVIDIA-GPU"
                value: 0

networks:
  nextcloud_net:

x-freebox_opts: &freebox_opts
  type: cifs
  # device: //192.168.0.254/SSD1/docker-data
  o: "rw,username=${SMB_USER},password=${SMB_PWD},iocharset=utf8,uid=1000,sec=ntlmv2,file_mode=0777,dir_mode=0777"

volumes:
  gotify_data:
    driver: local
    driver_opts:
      <<: *freebox_opts
      device: ${DOCKER_DATA}/gotify/data
  gotify_config:
    driver_opts:
      <<: *freebox_opts
      device: ${DOCKER_DATA}/gotify/conf
  nextcloud_db:
    driver: local
    driver_opts:
      <<: *freebox_opts
      device: ${DOCKER_DATA}/nextcloud/db
  nextcloud_config:
    driver: local
    driver_opts:
      <<: *freebox_opts
      device: ${DOCKER_DATA}/nextcloud/config
