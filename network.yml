version: "3.8"

x-placement_apollon: &placement_apollon
  placement:
    constraints:
      - node.hostname == Apollon

x-placement_athena: &placement_athena
  placement:
    constraints:
      - node.hostname == Athena

x-placement_hermes: &placement_hermes
  placement:
    constraints:
      - node.hostname == Hermes

services:
  hermes_adguard:
    image: adguard/adguardhome
    volumes:
      - adguard_conf:/opt/adguardhome/conf
      - adguard_data:/opt/adguardhome/work
    networks:
      - traefik-net
    ports:
      - target: 53
        published: 53
        mode: host
        protocol: tcp
      - target: 53
        published: 53
        mode: host
        protocol: udp
    deploy:
      <<: *placement_hermes
      labels:
        - traefik.enable=true
        - traefik.http.routers.hermes_adguard.rule=Host(`adguard.${HOME}`)
        - traefik.http.routers.hermes_adguard.entrypoints=http
        - traefik.http.services.hermes_adguard.loadbalancer.server.port=3000

  apollon_traefik:
    image: mgarnier11/my-traefik
    ports:
      - target: 80
        published: 80
        mode: host
        protocol: tcp
      - target: 8080
        published: 8080
        mode: host
        protocol: tcp
    networks:
      - traefik-net
    deploy:
      <<: *placement_apollon
      labels:
        - traefik.enable=true
        - traefik.http.routers.apollon_traefik.rule=Host(`traefik.${HOME}`)
        - traefik.http.routers.apollon_traefik.entrypoints=http
        # - traefik.http.routers.apollon_traefik.middlewares=test-plugin
        - traefik.http.services.apollon_traefik.loadbalancer.server.port=8080
        # - traefik.http.middlewares.routing-plugin.plugin.routing-plugin
      update_config:
        order: stop-first
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_data:/data
      # - ~/traefik/plugin_test:/plugins-local/src/github.com/mgarnier11/plugin_test
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      - --providers.docker.swarmmode
      - --providers.docker.exposedbydefault=false
      - --providers.docker.watch=true
      - --providers.docker.network=traefik-net
      - --providers.file
      - --providers.file.filename=/data/dynamic.yml
      - --providers.file.watch=true
      - --entrypoints.http.address=:80
      - --entrypoints.http.forwardedHeaders.insecure=true
      # Enable the access log, with HTTP requests
      - --accesslog.bufferingsize=100
      - --accesslog.filepath=/data/logs/traefik-access.log
      - --log.level=DEBUG
      - --api.dashboard=true
      - --api.insecure=true
      # - --experimental.localPlugins.test-plugin.modulename=github.com/mgarnier11/plugin_test
      # - --experimental.plugins.routing-plugin.modulename=github.com/kumina/traefik-routing-plugin
      # - --experimental.plugins.routing-plugin.version=v0.0.2

networks:
  traefik-net:
    external: true

x-freebox_opts: &freebox_opts
  type: cifs
  # device: //192.168.0.254/SSD1/docker-data
  o: "rw,username=${SMB_USER},password=${SMB_PWD},iocharset=utf8,uid=1000,sec=ntlmv2,file_mode=0777,dir_mode=0777"

volumes:
  adguard_data:
    driver: local
    driver_opts:
      <<: *freebox_opts
      device: ${DOCKER_DATA}/adguard/work
  adguard_conf:
    driver: local
    driver_opts:
      <<: *freebox_opts
      device: ${DOCKER_DATA}/adguard/conf
  traefik_data:
    driver: local
    driver_opts:
      <<: *freebox_opts
      device: ${DOCKER_DATA}/traefik
