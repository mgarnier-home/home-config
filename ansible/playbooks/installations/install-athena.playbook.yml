- name: Fresh install of athena
  hosts: athena
  gather_facts: false
  vars_prompt:
    - name: tailscale_auth_key
      prompt: "Enter your tailscale auth key"
  tasks:
    - name: Add contrib and non-free repositories for nvidia drivers
      become: true
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list
        line: "deb http://deb.debian.org/debian/ bookworm main contrib non-free non-free-firmware"
        state: present
        insertafter: EOF

    - name: Setup NVIDIA container toolkit repositories # noqa: ansible-lint command-instead-of-module risky-shell-pipe
      ansible.builtin.shell:
        cmd: |
          curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \
          && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
          sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
          sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
      args:
        creates: /etc/apt/sources.list.d/nvidia-container-toolkit.list
      become: true

    - name: Update packages
      become: true
      ansible.builtin.apt:
        update_cache: true

    - name: Install docker
      ansible.builtin.include_tasks: tasks/install-docker.yml

    - name: Install tailscale
      ansible.builtin.include_tasks: tasks/install-tailscale.yml

    - name: Install nvidia
      block:
        - name: Install nvidia-drivers
          become: true
          ansible.builtin.apt:
            pkg:
              - nvidia-driver
              - firmware-misc-nonfree
            state: present
            update_cache: true
          notify: Reboot host

        - name: Install NVIDIA container toolkit
          become: true
          ansible.builtin.apt:
            pkg:
              - nvidia-container-toolkit
            state: present
            update_cache: true

        - name: Configure docker
          become: true
          ansible.builtin.command: nvidia-ctk runtime configure --runtime=docker
          changed_when: true
          notify: Restart docker

  handlers:
    - name: Reboot host
      become: true
      ansible.builtin.reboot:
        reboot_timeout: 300
        msg: "Rebooting the system to apply changes"

    - name: Restart docker
      become: true
      ansible.builtin.systemd:
        name: docker
        state: restarted
        enabled: true
