name: network

services:
  traefik:
    container_name: traefik
    restart: unless-stopped
    image: mgarnier11/my-traefik
    networks:
      traefik-net:
        ipv4_address: 172.19.0.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /docker-data/traefik-certs:/certs
      - type: volume
        source: fbx_docker_data
        target: /data
        volume:
          subpath: traefik
    ports:
      - 80:80/tcp
      - 443:443/tcp
      - ${APOLLON_TRAEFIK_PORT}:8080/tcp
    labels:
      - traefik-conf.port=${APOLLON_TRAEFIK_PORT}
    environment:
      - ZEPHYR_IP=${ZEPHYR_IP}
      - APOLLON_IP=${APOLLON_IP}
      - ATHENA_IP=${ATHENA_IP}
      - OVH_ENDPOINT=${OVH_ENDPOINT}
      - OVH_APPLICATION_KEY=${OVH_APPLICATION_KEY}
      - OVH_APPLICATION_SECRET=${OVH_APPLICATION_SECRET}
      - OVH_CONSUMER_KEY=${OVH_CONSUMER_KEY}

    env_file:
      - ./ports.env
    depends_on:
      - traefik-conf
    command:
      - --configFile=/data/static.yml
      - --ping=true
    healthcheck:
      test: wget -q --spider --timeout=5 --tries=1 http://localhost:8080/ping || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  traefik-conf:
    container_name: traefik-conf
    restart: unless-stopped
    image: mgarnier11/traefik-conf
    volumes:
      - type: volume
        source: fbx_docker_data
        target: /traefik-data
        volume:
          subpath: traefik
    environment:
      - DATA_FILE_PATH=/traefik-data/config.yml
      - SERVER_PORT=3000
    ports:
      - ${APOLLON_TRAEFIK_CONFIG_PORT}:3000/tcp
    labels:
      - traefik-conf.port=${APOLLON_TRAEFIK_CONFIG_PORT}
    networks:
      traefik-net:
        ipv4_address: 172.19.0.3
    healthcheck:
      test: wget -q --spider --timeout=5 --tries=1 http://localhost:3000 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  traefik-net:
    ipam:
      config:
        - subnet: 172.19.0.0/16
          ip_range: 172.19.0.0/24
